'''目标• 使用 OpenCV 或 Numpy 函数计算直方图• 使用 Opencv 或者 Matplotlib 函数绘制直方图• 将要学习的函数有： cv2.calcHist()， np.histogram()'''import cv2import numpy as npfrom matplotlib import pyplot as plt'''统计直方图1. bins: 把原来的 256 个值等分成 16 小组，取每组的总和。而这里的每一个小组就被成为 BIN2. DIMS：表示我们收集数据的参数数目。在本例中，我们对收集到的数据只考虑一件事：灰度值。所以这里就是 1。3. RANGE：就是要统计的灰度值范围，一般来说为 [0， 256]，也就是说所有的灰度值cv2.calcHist(images, channels, mask, histSize, ranges[, hist[, accumulate]])    1. images: 原图像（图像格式为 uint8 或 float32）。当传入函数时应该用中括号 [] 括起来，例如： [img]。    2. channels: 同样需要用中括号括起来，它会告诉函数我们要统计那幅图像的直方图。    如果输入图像是灰度图，它的值就是 [0]；如果是彩色图像的话，    传入的参数可以是 [0]， [1]， [2] 它们分别对应着通道 B， G， R。    3. mask: 掩模图像。要统计整幅图像的直方图就把它设为 None。    但是如果你想统计图像某一部分的直方图的话，你就需要制作一个掩模图像，并使用它。（后边有例子）    4. histSize:BIN 的数目。也应该用中括号括起来，例如： [256]。    5. ranges: 像素值范围，通常为 [0， 256]''''''# 使用matplotlib绘制直方图'''# 使用matplotlib绘制直方图def draw_hist_by_plt(img):    plt.hist(img.ravel(), 256, [0, 256])    plt.show()    plt.close()    pass# 或者你可以只使用 matplotlib 的绘图功能，这在同时绘制多通道（BGR）的直方图，很有用。# 但是你首先要告诉绘图函数你的直方图数据在哪里。def draw_hist_by_plt_with_RGB(img):    color = ('b', 'g', 'r')    for i, col in enumerate(color):        histr = cv2.calcHist([img], [i], None, [256], [0, 256])        plt.plot(histr, color=col)        plt.xlim([0, 256])    plt.show()    plt.close()    pass'''使用掩模要统计图像某个局部区域的直方图只需要构建一副掩模图像。将要统计的部分设置成白色，其余部分为黑色，就构成了一副掩模图像。然后把这个掩模图像传给函数就可以了。'''def hist_with_mask(img):    # mask    mask = np.zeros(img.shape[:2], np.uint8)    mask[100:300, 100:400] = 255    masked_img = cv2.bitwise_and(img, img, mask=mask)    hist_full = cv2.calcHist([img], [0], None, [256], [0, 256])    hist_mask = cv2.calcHist([img], [0], mask, [256], [0, 256])    plt.figure(1)    plt.subplot(221), plt.imshow(img, 'gray')    plt.subplot(222), plt.imshow(mask, 'gray')    plt.subplot(223), plt.imshow(masked_img, 'gray')    plt.subplot(224), plt.plot(hist_full), plt.plot(hist_mask)    plt.xlim([0, 256])    plt.show()    plt.close()    passif __name__ == '__main__':    img = cv2.imread('../data/plane.jpg', 0)    hist_with_mask(img)    pass