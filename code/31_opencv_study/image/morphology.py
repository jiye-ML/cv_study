import cv2import numpy as np'''原理形态学操作是根据图像形状进行的简单操作。一般情况下对二值化图像进行的操作。需要输入两个参数，一个是原始图像，第二个被称为结构化元素或核，它是用来决定操作的性质的。两个基本的形态学操作是腐蚀和膨胀。他们的变体构成了开运算，闭运算，梯度等。''''''腐蚀 膨胀'''def erosion(image):    '''    功能：        腐蚀：卷积核沿着图像滑动，如果与卷积核对应的原图像的所有像素值都是 1，那么中心元素就保持原来的像素值，否则就变为零。        膨胀：与卷积核对应的原图像的像素值中只要有一个是 1，中心元素的像素值就是 1。    提示：         一般在去噪声时先用腐蚀再用膨胀。因为腐蚀在去掉白噪声的同时，也会使前景对象变小。        所以我们再对他进行膨胀。这时噪声已经被去除了，不会再回来了，但是前景还在并会增加。膨胀也可以用来连接两个分开的物体。    '''    image = cv2.cvtColor(image, cv2.COLOR_RGB2GRAY)    # 变为黑白图片, 效果更明显    image = image // 255 - 1    kernel = np.ones((5, 5), np.uint8)    # 腐蚀    erosion = cv2.erode(image, kernel, iterations=1)    # 膨胀    dilate = cv2.dilate(image, kernel, iterations=1)    cv2.imshow('image', image)    cv2.imshow('erosion', erosion)    cv2.imshow('dilate', dilate)    cv2.waitKey()    cv2.destroyAllWindows()    pass'''开运算， 闭运算, 形态学梯度'''def morphologyEx(image):    '''    功能：        开运算：先进性腐蚀再进行膨胀就叫做开运算。。        闭运算：先膨胀再腐蚀。它经常被用来填充前景物体中的小洞，或者前景物体上的小黑点。        形态梯度：其实就是一幅图像膨胀与腐蚀的差别，结果看上去就像前景物体的轮廓。    '''    image = cv2.cvtColor(image, cv2.COLOR_RGB2GRAY)    # 变为黑白图片, 效果更明显    image = image // 255 - 1    kernel = np.ones((5, 5), np.uint8)    # 开运算    morphology_open = cv2.morphologyEx(image, cv2.MORPH_OPEN, kernel)    # 闭运算    morphology_close = cv2.morphologyEx(image, cv2.MORPH_CLOSE, kernel)    # 形态梯度    morphology_gradient = cv2.morphologyEx(image, cv2.MORPH_GRADIENT, kernel)    cv2.imshow('image', image)    cv2.imshow('morphology_close', morphology_close)    cv2.imshow('morphology_open', morphology_open)    cv2.imshow('morphology_gradient', morphology_gradient)    cv2.waitKey()    cv2.destroyAllWindows()    pass'''结构化元素'''def getStructuringElement():    '''    功能： 构建一个椭圆形/圆形的核。    函数： cv2.getStructuringElement()    参数： 核的形状和大小。    '''    print("矩形框")    print(cv2.getStructuringElement(cv2.MORPH_RECT, (5, 5)))    print("椭圆")    print(cv2.getStructuringElement(cv2.MORPH_ELLIPSE, (5, 5)))    print("十字交叉线")    print(cv2.getStructuringElement(cv2.MORPH_CROSS, (5, 5)))    passif __name__ == '__main__':    image = cv2.imread('../data/opencv_logo.png')    getStructuringElement()    pass